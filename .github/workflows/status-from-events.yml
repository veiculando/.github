name: Project — Status from Events

on:
  push:
    branches:
      - "feature/*" # In progress (opcional, conforme convenção de branch)
  pull_request:
    types: [opened, closed] # Code Review / QA-Staging / Done
  issues:
    types: [labeled] # Ready for Prod (UAT approved)

jobs:
  # ---- In progress (branch push) ----
  extract-issue-from-branch:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      issue: "${{ steps.extract.outputs.issue_number }}"
    steps:
      - name: Extract issue number from branch name
        id: extract
        run: |
          set -euo pipefail
          BRANCH="${GITHUB_REF_NAME}"
          if [[ "$BRANCH" =~ ^feature/([0-9]+)- ]]; then
            echo "issue_number=${BASH_REMATCH[1]}" >> "$GITHUB_OUTPUT"
          else
            echo "issue_number=" >> "$GITHUB_OUTPUT"
          fi

  set-in-progress:
    needs: extract-issue-from-branch
    if: needs.extract-issue-from-branch.outputs.issue != ''
    uses: veiculando/.github/.github/workflows/project-set-status.yml@main
    with:
      organization: veiculando
      project_number: 1
      repo: ${{ github.event.repository.name }}
      issue_number: ${{ needs.extract-issue-from-branch.outputs.issue }}
      status_name: In Progress
    secrets:
      GH_PROJECT_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}

  # ---- Utilities for PR events ----
  extract-issue-from-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      issue: "${{ steps.extract.outputs.issue_number }}"
    steps:
      - name: Extract issue number from PR context
        id: extract
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          set -euo pipefail
          ISSUE=""
          if [[ -n "${HEAD_REF:-}" ]] && [[ "$HEAD_REF" =~ ([0-9]+) ]]; then
            ISSUE="${BASH_REMATCH[1]}"
          elif [[ -n "${PR_TITLE:-}" ]] && [[ "$PR_TITLE" =~ \#([0-9]+) ]]; then
            ISSUE="${BASH_REMATCH[1]}"
          fi
          echo "issue_number=$ISSUE" >> "$GITHUB_OUTPUT"

  # ---- Code Review (PR opened) ----
  set-code-review:
    needs: extract-issue-from-pr
    if: github.event_name == 'pull_request' && github.event.action == 'opened' && needs.extract-issue-from-pr.outputs.issue != ''
    uses: veiculando/.github/.github/workflows/project-set-status.yml@main
    with:
      organization: veiculando
      project_number: 1
      repo: ${{ github.event.repository.name }}
      issue_number: ${{ needs.extract-issue-from-pr.outputs.issue }}
      status_name: Code Review
    secrets:
      GH_PROJECT_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}

  # ---- QA/Staging (PR merged into develop) ----
  set-qa-staging:
    needs: extract-issue-from-pr
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop' && needs.extract-issue-from-pr.outputs.issue != ''
    uses: veiculando/.github/.github/workflows/project-set-status.yml@main
    with:
      organization: veiculando
      project_number: 1
      repo: ${{ github.event.repository.name }}
      issue_number: ${{ needs.extract-issue-from-pr.outputs.issue }}
      status_name: QA/Staging
    secrets:
      GH_PROJECT_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}

  # ---- Ready for Prod (Issue labeled uat-approved) ----
  ready-for-prod-on-issue-label:
    if: github.event_name == 'issues' && github.event.action == 'labeled' && github.event.label.name == 'uat-approved'
    uses: veiculando/.github/.github/workflows/project-set-status.yml@main
    with:
      organization: veiculando
      project_number: 1
      repo: ${{ github.event.repository.name }}
      issue_number: ${{ github.event.issue.number }}
      status_name: Ready for Prod
    secrets:
      GH_PROJECT_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}

  # ---- Done (PR merged into main) ----
  set-done:
    needs: extract-issue-from-pr
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && needs.extract-issue-from-pr.outputs.issue != ''
    uses: veiculando/.github/.github/workflows/project-set-status.yml@main
    with:
      organization: veiculando
      project_number: 1
      repo: ${{ github.event.repository.name }}
      issue_number: ${{ needs.extract-issue-from-pr.outputs.issue }}
      status_name: Done
    secrets:
      GH_PROJECT_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}
